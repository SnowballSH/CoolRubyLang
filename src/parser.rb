#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.5.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

  require "#{File.dirname(__FILE__)}/lexer.rb"
  require "#{File.dirname(__FILE__)}/nodes.rb"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y.rb/module_eval...', 'grammar.y.rb', 148)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code)
    puts @tokens.inspect if show_tokens
    do_parse
  end
  
  def next_token
    @tokens.shift
  end
  
...end grammar.y.rb/module_eval...
##### State transition tables begin ###

racc_action_table = [
    26,    27,     5,    18,    19,    20,    21,    22,    23,    24,
    30,    30,    26,    27,    75,    18,    19,    20,    21,    22,
    23,    24,    83,    31,    82,    48,    54,    16,    30,    17,
    25,    88,    31,    87,    42,    43,    91,    17,    17,    16,
    47,    92,    25,    26,    27,    53,    18,    19,    20,    21,
    22,    23,    24,    26,    27,    17,    18,    19,    20,    21,
    22,    23,    24,    48,    31,    52,    42,    43,    40,    41,
    16,    51,    31,    25,    42,    43,    49,    93,    47,    94,
    16,    26,    27,    25,    18,    19,    20,    21,    22,    23,
    24,    26,    27,    50,    18,    19,    20,    21,    22,    23,
    24,    31,    56,    42,    43,    40,    41,    28,    16,    71,
    79,    25,    76,    77,    76,    77,    76,    77,    16,    26,
    27,    25,    18,    19,    20,    21,    22,    23,    24,    26,
    27,    95,    18,    19,    20,    21,    22,    23,    24,    31,
    31,    42,    43,    40,    41,   nil,    16,   nil,    31,    25,
    42,    43,    40,    41,   nil,   nil,    16,    26,    27,    25,
    18,    19,    20,    21,    22,    23,    24,    26,    27,   nil,
    18,    19,    20,    21,    22,    23,    24,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    25,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    25,    26,    27,
     5,    18,    19,    20,    21,    22,    23,    24,    26,    27,
   nil,    18,    19,    20,    21,    22,    23,    24,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,    17,    25,   nil,
   nil,   nil,   nil,   nil,   nil,    16,   nil,   nil,    25,    26,
    27,     5,    18,    19,    20,    21,    22,    23,    24,    26,
    27,   nil,    18,    19,    20,    21,    22,    23,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,    17,    25,
   nil,   nil,   nil,   nil,   nil,   nil,    16,    26,    27,    25,
    18,    19,    20,    21,    22,    23,    24,    26,    27,   nil,
    18,    19,    20,    21,    22,    23,    24,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    16,   nil,   nil,    25,   nil,   nil,
   nil,   nil,   nil,   nil,    16,    26,    27,    25,    18,    19,
    20,    21,    22,    23,    24,    26,    27,   nil,    18,    19,
    20,    21,    22,    23,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,   nil,    25,   nil,   nil,   nil,   nil,
   nil,   nil,    16,    26,    27,    25,    18,    19,    20,    21,
    22,    23,    24,    26,    27,   nil,    18,    19,    20,    21,
    22,    23,    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,
    16,    26,    27,    25,    18,    19,    20,    21,    22,    23,
    24,    26,    27,   nil,    18,    19,    20,    21,    22,    23,
    24,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,    16,    26,
    27,    25,    18,    19,    20,    21,    22,    23,    24,   nil,
    31,   nil,    42,    43,    40,    41,    36,    37,    38,    39,
    34,    35,    33,    32,   nil,   nil,    16,    69,    31,    25,
    42,    43,    40,    41,    36,    37,    38,    39,    34,    35,
    33,    32,    31,   nil,    42,    43,    40,    41,    36,    37,
    38,    39,    34,    35,    33,    32,    31,   nil,    42,    43,
    40,    41,    36,    37,    38,    39,    34,    35,    33,    32,
    31,   nil,    42,    43,    40,    41,    36,    37,    38,    39,
    34,    35,    33,    32,    31,   nil,    42,    43,    40,    41,
    36,    37,    38,    39,    34,    35,    33,    32,    31,   nil,
    42,    43,    40,    41,    36,    37,    38,    39,    34,    35,
    33,    32,    31,   nil,    42,    43,    40,    41,    36,    37,
    38,    39,    34,    35,    33,    32,    31,   nil,    42,    43,
    40,    41,    36,    37,    38,    39,    34,    35,    33,    32,
    31,   nil,    42,    43,    40,    41,    36,    37,    38,    39,
    34,    35,    33,    31,   nil,    42,    43,    40,    41,    36,
    37,    38,    39,    34,    35,    31,   nil,    42,    43,    40,
    41,    36,    37,    38,    39,    31,   nil,    42,    43,    40,
    41,    36,    37,    38,    39 ]

racc_action_check = [
    77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
    86,     2,    49,    49,    51,    49,    49,    49,    49,    49,
    49,    49,    72,    68,    72,    56,    28,    77,    85,    77,
    77,    79,    65,    77,    65,    65,    85,    86,     2,    49,
    56,    86,    49,     5,     5,    27,     5,     5,     5,     5,
     5,     5,     5,    16,    16,    85,    16,    16,    16,    16,
    16,    16,    16,    23,    63,    26,    63,    63,    63,    63,
     5,    25,    66,     5,    66,    66,    23,    89,    23,    89,
    16,    47,    47,    16,    47,    47,    47,    47,    47,    47,
    47,    50,    50,    24,    50,    50,    50,    50,    50,    50,
    50,    64,    31,    64,    64,    64,    64,     1,    47,    47,
    52,    47,    94,    94,    52,    52,    53,    53,    50,    75,
    75,    50,    75,    75,    75,    75,    75,    75,    75,    43,
    43,    93,    43,    43,    43,    43,    43,    43,    43,    62,
    67,    62,    62,    62,    62,   nil,    75,   nil,    61,    75,
    61,    61,    61,    61,   nil,   nil,    43,    42,    42,    43,
    42,    42,    42,    42,    42,    42,    42,    83,    83,   nil,
    83,    83,    83,    83,    83,    83,    83,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    42,   nil,   nil,    42,   nil,   nil,
   nil,   nil,   nil,   nil,    83,   nil,   nil,    83,     0,     0,
     0,     0,     0,     0,     0,     0,     0,     0,    29,    29,
   nil,    29,    29,    29,    29,    29,    29,    29,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     0,   nil,     0,     0,   nil,
   nil,   nil,   nil,   nil,   nil,    29,   nil,   nil,    29,    76,
    76,    76,    76,    76,    76,    76,    76,    76,    76,    32,
    32,   nil,    32,    32,    32,    32,    32,    32,    32,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    76,   nil,    76,    76,
   nil,   nil,   nil,   nil,   nil,   nil,    32,    33,    33,    32,
    33,    33,    33,    33,    33,    33,    33,    34,    34,   nil,
    34,    34,    34,    34,    34,    34,    34,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    33,   nil,   nil,    33,   nil,   nil,
   nil,   nil,   nil,   nil,    34,    35,    35,    34,    35,    35,
    35,    35,    35,    35,    35,    36,    36,   nil,    36,    36,
    36,    36,    36,    36,    36,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    35,   nil,   nil,    35,   nil,   nil,   nil,   nil,
   nil,   nil,    36,    37,    37,    36,    37,    37,    37,    37,
    37,    37,    37,    38,    38,   nil,    38,    38,    38,    38,
    38,    38,    38,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    37,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,
    38,    39,    39,    38,    39,    39,    39,    39,    39,    39,
    39,    40,    40,   nil,    40,    40,    40,    40,    40,    40,
    40,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    39,   nil,
   nil,    39,   nil,   nil,   nil,   nil,   nil,   nil,    40,    41,
    41,    40,    41,    41,    41,    41,    41,    41,    41,   nil,
    45,   nil,    45,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,   nil,   nil,    41,    45,     3,    41,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,     3,    44,   nil,    44,    44,    44,    44,    44,    44,
    44,    44,    44,    44,    44,    44,    90,   nil,    90,    90,
    90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    73,   nil,    73,    73,    73,    73,    73,    73,    73,    73,
    73,    73,    73,    73,    74,   nil,    74,    74,    74,    74,
    74,    74,    74,    74,    74,    74,    74,    74,    55,   nil,
    55,    55,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    84,   nil,    84,    84,    84,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    70,   nil,    70,    70,
    70,    70,    70,    70,    70,    70,    70,    70,    70,    70,
    57,   nil,    57,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    58,   nil,    58,    58,    58,    58,    58,
    58,    58,    58,    58,    58,    60,   nil,    60,    60,    60,
    60,    60,    60,    60,    60,    59,   nil,    59,    59,    59,
    59,    59,    59,    59,    59 ]

racc_action_pointer = [
   196,   107,     7,   445,   nil,    41,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    51,   nil,   nil,   nil,
   nil,   nil,   nil,    49,    66,    61,    55,    34,    26,   206,
   nil,    92,   247,   275,   285,   313,   323,   351,   361,   389,
   399,   427,   155,   127,   459,   427,   nil,    79,   nil,    10,
    89,   -13,    81,    83,   nil,   515,    11,   557,   570,   592,
   582,   135,   126,    51,    88,    19,    59,   127,    10,   nil,
   543,   nil,    -6,   487,   501,   117,   237,    -2,   nil,    21,
   nil,   nil,   nil,   165,   529,    24,     6,   nil,   nil,    49,
   473,   nil,   nil,   121,    79,   nil,   nil ]

racc_action_default = [
    -1,   -60,    -2,    -3,    -6,   -19,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -60,   -20,   -21,   -22,
   -23,   -24,   -25,   -50,   -48,   -60,   -60,   -60,   -60,    -5,
   -19,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,   -60,
   -60,   -60,   -60,   -60,    -7,   -60,   -26,   -60,   -30,   -60,
   -60,   -60,   -60,   -60,    97,    -4,   -51,   -36,   -37,   -38,
   -39,   -40,   -41,   -42,   -43,   -44,   -45,   -46,   -47,   -18,
   -31,   -28,   -60,   -52,   -49,   -60,   -60,   -60,   -57,   -33,
   -59,   -27,   -29,   -60,   -53,   -60,   -60,   -56,   -34,   -60,
   -32,   -54,   -55,   -60,   -60,   -35,   -58 ]

racc_goto_table = [
    29,    44,    78,    80,     2,    89,    72,    46,     1,   nil,
   nil,   nil,    45,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    55,   nil,   nil,    57,    58,
    59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
    81,   nil,   nil,    70,    96,    73,    74,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    90,
    85,    86,   nil,    29,    29 ]

racc_goto_check = [
     4,     3,    18,    18,     2,    17,    16,    15,     1,   nil,
   nil,   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
    15,   nil,   nil,     3,    18,     3,     3,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
     2,     2,   nil,     4,     4 ]

racc_goto_pointer = [
   nil,     8,     4,    -4,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -16,   -41,   -74,   -50 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     6,     7,     8,     9,    10,
    11,    12,    13,    14,    15,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 37, :_reduce_1,
  1, 37, :_reduce_2,
  1, 38, :_reduce_3,
  3, 38, :_reduce_4,
  2, 38, :_reduce_5,
  1, 38, :_reduce_6,
  2, 38, :_reduce_7,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  3, 39, :_reduce_18,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 41, :_reduce_21,
  1, 41, :_reduce_22,
  1, 41, :_reduce_23,
  1, 41, :_reduce_24,
  1, 41, :_reduce_25,
  2, 42, :_reduce_26,
  4, 42, :_reduce_27,
  2, 51, :_reduce_28,
  3, 51, :_reduce_29,
  1, 51, :_reduce_30,
  1, 52, :_reduce_31,
  3, 52, :_reduce_32,
  0, 53, :_reduce_33,
  1, 53, :_reduce_34,
  3, 53, :_reduce_35,
  3, 43, :_reduce_36,
  3, 43, :_reduce_37,
  3, 43, :_reduce_38,
  3, 43, :_reduce_39,
  3, 43, :_reduce_40,
  3, 43, :_reduce_41,
  3, 43, :_reduce_42,
  3, 43, :_reduce_43,
  3, 43, :_reduce_44,
  3, 43, :_reduce_45,
  3, 43, :_reduce_46,
  3, 43, :_reduce_47,
  1, 44, :_reduce_48,
  3, 45, :_reduce_49,
  1, 46, :_reduce_50,
  3, 46, :_reduce_51,
  3, 47, :_reduce_52,
  4, 48, :_reduce_53,
  3, 54, :_reduce_54,
  3, 54, :_reduce_55,
  2, 54, :_reduce_56,
  3, 49, :_reduce_57,
  6, 49, :_reduce_58,
  3, 50, :_reduce_59 ]

racc_reduce_n = 60

racc_shift_n = 97

racc_token_table = {
  false => 0,
  :error => 1,
  :DEF => 2,
  :CLASS => 3,
  :NEWLINE => 4,
  :NUMBER => 5,
  :STRING => 6,
  :TRUE => 7,
  :FALSE => 8,
  :NIL => 9,
  :IDENTIFIER => 10,
  :CONSTANT => 11,
  :END => 12,
  "." => 13,
  "!" => 14,
  "*" => 15,
  "/" => 16,
  "+" => 17,
  "-" => 18,
  ">" => 19,
  ">=" => 20,
  "<" => 21,
  "<=" => 22,
  "==" => 23,
  "!=" => 24,
  "&&" => 25,
  "||" => 26,
  "=" => 27,
  "," => 28,
  "(" => 29,
  ")" => 30,
  ";" => 31,
  "@" => 32,
  ":" => 33,
  "{" => 34,
  "}" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "END",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\"@\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Program",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "SetConstant",
  "GetLocal",
  "SetLocal",
  "SetGlobal",
  "Def",
  "Class",
  "Arguments",
  "ArgList",
  "ParamList",
  "Block" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 28)
  def _reduce_1(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 29)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 33)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val)
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 34)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 35)
  def _reduce_5(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 36)
  def _reduce_6(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 37)
  def _reduce_7(val, _values, result)
     result = Nodes.new([val[1]])
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 51)
  def _reduce_18(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 60)
  def _reduce_21(val, _values, result)
     result = NumberNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 61)
  def _reduce_22(val, _values, result)
     result = StringNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 62)
  def _reduce_23(val, _values, result)
     result = TrueNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 63)
  def _reduce_24(val, _values, result)
     result = FalseNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 64)
  def _reduce_25(val, _values, result)
     result = NilNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 68)
  def _reduce_26(val, _values, result)
     result = CallNode.new(nil, val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 70)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 74)
  def _reduce_28(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 75)
  def _reduce_29(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 76)
  def _reduce_30(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 80)
  def _reduce_31(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 81)
  def _reduce_32(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 85)
  def _reduce_33(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 86)
  def _reduce_34(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 87)
  def _reduce_35(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 91)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 92)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 93)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 94)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 95)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 96)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 97)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 98)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 99)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 100)
  def _reduce_45(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 101)
  def _reduce_46(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 102)
  def _reduce_47(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 106)
  def _reduce_48(val, _values, result)
     result = GetConstantNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 110)
  def _reduce_49(val, _values, result)
     result = SetConstantNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 114)
  def _reduce_50(val, _values, result)
     result = GetLocalNode.new(nil, val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 115)
  def _reduce_51(val, _values, result)
     result = GetLocalNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 119)
  def _reduce_52(val, _values, result)
     result = SetLocalNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 123)
  def _reduce_53(val, _values, result)
     result = SetGlobalNode.new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 127)
  def _reduce_54(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 128)
  def _reduce_55(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 129)
  def _reduce_56(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 133)
  def _reduce_57(val, _values, result)
     result = DefNode.new(val[1], [], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 135)
  def _reduce_58(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 139)
  def _reduce_59(val, _values, result)
     result = ClassNode.new(val[1], val[2])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
