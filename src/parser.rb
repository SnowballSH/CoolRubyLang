#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.5.0
# from Racc grammar file "".
#

require 'racc/parser.rb'

  require "#{File.dirname(__FILE__)}/lexer.rb"
  require "#{File.dirname(__FILE__)}/nodes.rb"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y.rb/module_eval...', 'grammar.y.rb', 143)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code)
    puts @tokens.inspect if show_tokens
    do_parse
  end
  
  def next_token
    @tokens.shift
  end
  
...end grammar.y.rb/module_eval...
##### State transition tables begin ###

racc_action_table = [
    24,    25,     5,    17,    18,    19,    20,    21,    22,    23,
    28,    28,    24,    25,     5,    17,    18,    19,    20,    21,
    22,    23,    75,    72,    73,    72,    73,    15,    79,    16,
    78,    29,    82,    40,    41,    38,    39,    16,    16,    15,
    87,    16,    24,    25,     5,    17,    18,    19,    20,    21,
    22,    23,    24,    25,    51,    17,    18,    19,    20,    21,
    22,    23,    46,    46,    83,    29,    28,    40,    41,    15,
    29,    16,    40,    41,    86,    47,    50,    45,    45,    15,
    68,    24,    25,    49,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    16,    17,    18,    19,    20,    21,    22,
    23,    88,    48,    89,    72,    73,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,    53,    29,    26,    90,
    29,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,   nil,   nil,   nil,   nil,   nil,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,   nil,   nil,   nil,   nil,
   nil,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,   nil,   nil,   nil,   nil,   nil,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,   nil,   nil,   nil,   nil,
   nil,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,   nil,   nil,   nil,   nil,   nil,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,    24,    25,    15,    17,
    18,    19,    20,    21,    22,    23,   nil,   nil,   nil,   nil,
   nil,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,    24,    25,    15,    17,    18,    19,    20,    21,    22,
    23,    29,   nil,    40,    41,    38,    39,    29,    15,    40,
    41,    38,    39,    34,    35,    36,    37,    29,    15,    40,
    41,    38,    39,    34,    35,    36,    37,    32,    33,    31,
    30,   nil,   nil,    29,    66,    40,    41,    38,    39,    34,
    35,    36,    37,    32,    33,    31,    30,    29,   nil,    40,
    41,    38,    39,    34,    35,    36,    37,    32,    33,    31,
    30,    29,   nil,    40,    41,    38,    39,    34,    35,    36,
    37,    32,    33,    31,    30,    29,   nil,    40,    41,    38,
    39,    34,    35,    36,    37,    32,    33,    31,    30,    29,
   nil,    40,    41,    38,    39,    34,    35,    36,    37,    32,
    33,    31,    30,    29,   nil,    40,    41,    38,    39,    34,
    35,    36,    37,    32,    33,    31,    30,    29,   nil,    40,
    41,    38,    39,    34,    35,    36,    37,    32,    33,    31,
    30,    29,   nil,    40,    41,    38,    39,    34,    35,    36,
    37,    32,    33,    31,    29,   nil,    40,    41,    38,    39,
    34,    35,    36,    37,    32,    33,    29,   nil,    40,    41,
    38,    39,    34,    35,    36,    37,    29,   nil,    40,    41,
    38,    39,    29,   nil,    40,    41,    38,    39 ]

racc_action_check = [
    73,    73,    73,    73,    73,    73,    73,    73,    73,    73,
    81,     2,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    49,    89,    89,    49,    49,    73,    69,    73,
    69,    60,    73,    60,    60,    60,    60,    81,     2,     0,
    81,     0,    72,    72,    72,    72,    72,    72,    72,    72,
    72,    72,    45,    45,    26,    45,    45,    45,    45,    45,
    45,    45,    22,    53,    75,    62,    80,    62,    62,    72,
    63,    72,    63,    63,    80,    22,    25,    22,    53,    45,
    45,    15,    15,    24,    15,    15,    15,    15,    15,    15,
    15,    47,    47,    80,    47,    47,    47,    47,    47,    47,
    47,    84,    23,    84,    50,    50,    79,    79,    15,    79,
    79,    79,    79,    79,    79,    79,    48,    48,    47,    48,
    48,    48,    48,    48,    48,    48,    29,    65,     1,    88,
    64,    27,    27,    79,    27,    27,    27,    27,    27,    27,
    27,     5,     5,    48,     5,     5,     5,     5,     5,     5,
     5,   nil,   nil,   nil,   nil,   nil,    30,    30,    27,    30,
    30,    30,    30,    30,    30,    30,    31,    31,     5,    31,
    31,    31,    31,    31,    31,    31,   nil,   nil,   nil,   nil,
   nil,    32,    32,    30,    32,    32,    32,    32,    32,    32,
    32,    33,    33,    31,    33,    33,    33,    33,    33,    33,
    33,   nil,   nil,   nil,   nil,   nil,    34,    34,    32,    34,
    34,    34,    34,    34,    34,    34,    35,    35,    33,    35,
    35,    35,    35,    35,    35,    35,   nil,   nil,   nil,   nil,
   nil,    36,    36,    34,    36,    36,    36,    36,    36,    36,
    36,    37,    37,    35,    37,    37,    37,    37,    37,    37,
    37,   nil,   nil,   nil,   nil,   nil,    38,    38,    36,    38,
    38,    38,    38,    38,    38,    38,    39,    39,    37,    39,
    39,    39,    39,    39,    39,    39,   nil,   nil,   nil,   nil,
   nil,    40,    40,    38,    40,    40,    40,    40,    40,    40,
    40,    41,    41,    39,    41,    41,    41,    41,    41,    41,
    41,    61,   nil,    61,    61,    61,    61,    56,    40,    56,
    56,    56,    56,    56,    56,    56,    56,    43,    41,    43,
    43,    43,    43,    43,    43,    43,    43,    43,    43,    43,
    43,   nil,   nil,     3,    43,     3,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,    85,   nil,    85,
    85,    85,    85,    85,    85,    85,    85,    85,    85,    85,
    85,    70,   nil,    70,    70,    70,    70,    70,    70,    70,
    70,    70,    70,    70,    70,    71,   nil,    71,    71,    71,
    71,    71,    71,    71,    71,    71,    71,    71,    71,    52,
   nil,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    52,    52,    52,    42,   nil,    42,    42,    42,    42,    42,
    42,    42,    42,    42,    42,    42,    42,    67,   nil,    67,
    67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
    67,    54,   nil,    54,    54,    54,    54,    54,    54,    54,
    54,    54,    54,    54,    55,   nil,    55,    55,    55,    55,
    55,    55,    55,    55,    55,    55,    57,   nil,    57,    57,
    57,    57,    57,    57,    57,    57,    59,   nil,    59,    59,
    59,    59,    58,   nil,    58,    58,    58,    58 ]

racc_action_pointer = [
    10,   128,     7,   320,   nil,   139,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    79,   nil,   nil,   nil,   nil,
   nil,   nil,    48,    75,    73,    65,    54,   129,   nil,   116,
   154,   164,   179,   189,   204,   214,   229,   239,   254,   264,
   279,   289,   390,   304,   nil,    50,   nil,    89,   114,    -7,
    72,   nil,   376,    49,   418,   431,   294,   443,   459,   453,
    18,   288,    52,    57,   117,   114,   nil,   404,   nil,     0,
   348,   362,    40,    -2,   nil,    54,   nil,   nil,   nil,   104,
    62,     6,   nil,   nil,    73,   334,   nil,   nil,   119,    -9,
   nil,   nil ]

racc_action_default = [
    -1,   -58,    -2,    -3,    -6,   -18,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -58,   -19,   -20,   -21,   -22,
   -23,   -24,   -50,   -48,   -58,   -58,   -58,    -5,   -18,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,    -7,   -58,   -25,   -58,   -30,   -58,   -58,   -58,
   -58,    92,    -4,   -27,   -36,   -37,   -38,   -39,   -40,   -41,
   -42,   -43,   -44,   -45,   -46,   -47,   -17,   -31,   -28,   -58,
   -51,   -49,   -58,   -58,   -55,   -33,   -57,   -26,   -29,   -58,
   -58,   -58,   -54,   -34,   -58,   -32,   -52,   -53,   -58,   -58,
   -35,   -56 ]

racc_goto_table = [
    27,    42,    74,    76,     2,    84,    69,    44,     1,   nil,
   nil,    43,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    52,   nil,   nil,    54,    55,    56,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    77,   nil,
   nil,    67,    91,    70,    71,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    85,    80,    81,    27,    27 ]

racc_goto_check = [
     4,     3,    17,    17,     2,    16,    15,    14,     1,   nil,
   nil,     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,   nil,   nil,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,    14,   nil,
   nil,     3,    17,     3,     3,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,     2,     2,     4,     4 ]

racc_goto_pointer = [
   nil,     8,     4,    -4,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   -15,   -39,   -70,   -47 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     6,     7,     8,     9,    10,
    11,    12,    13,    14,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 36, :_reduce_1,
  1, 36, :_reduce_2,
  1, 37, :_reduce_3,
  3, 37, :_reduce_4,
  2, 37, :_reduce_5,
  1, 37, :_reduce_6,
  2, 37, :_reduce_7,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  3, 38, :_reduce_17,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 40, :_reduce_20,
  1, 40, :_reduce_21,
  1, 40, :_reduce_22,
  1, 40, :_reduce_23,
  1, 40, :_reduce_24,
  2, 41, :_reduce_25,
  4, 41, :_reduce_26,
  3, 41, :_reduce_27,
  2, 49, :_reduce_28,
  3, 49, :_reduce_29,
  1, 49, :_reduce_30,
  1, 50, :_reduce_31,
  3, 50, :_reduce_32,
  0, 51, :_reduce_33,
  1, 51, :_reduce_34,
  3, 51, :_reduce_35,
  3, 42, :_reduce_36,
  3, 42, :_reduce_37,
  3, 42, :_reduce_38,
  3, 42, :_reduce_39,
  3, 42, :_reduce_40,
  3, 42, :_reduce_41,
  3, 42, :_reduce_42,
  3, 42, :_reduce_43,
  3, 42, :_reduce_44,
  3, 42, :_reduce_45,
  3, 42, :_reduce_46,
  3, 42, :_reduce_47,
  1, 43, :_reduce_48,
  3, 44, :_reduce_49,
  1, 45, :_reduce_50,
  3, 46, :_reduce_51,
  3, 52, :_reduce_52,
  3, 52, :_reduce_53,
  2, 52, :_reduce_54,
  3, 47, :_reduce_55,
  6, 47, :_reduce_56,
  3, 48, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 92

racc_token_table = {
  false => 0,
  :error => 1,
  :DEF => 2,
  :CLASS => 3,
  :NEWLINE => 4,
  :NUMBER => 5,
  :STRING => 6,
  :TRUE => 7,
  :FALSE => 8,
  :NIL => 9,
  :IDENTIFIER => 10,
  :CONSTANT => 11,
  :END => 12,
  "." => 13,
  "!" => 14,
  "*" => 15,
  "/" => 16,
  "+" => 17,
  "-" => 18,
  ">" => 19,
  ">=" => 20,
  "<" => 21,
  "<=" => 22,
  "==" => 23,
  "!=" => 24,
  "&&" => 25,
  "||" => 26,
  "=" => 27,
  "," => 28,
  "(" => 29,
  ")" => 30,
  ";" => 31,
  ":" => 32,
  "{" => 33,
  "}" => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "END",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "\":\"",
  "\"{\"",
  "\"}\"",
  "$start",
  "Program",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "SetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "Arguments",
  "ArgList",
  "ParamList",
  "Block" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 28)
  def _reduce_1(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 29)
  def _reduce_2(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 33)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val)
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 34)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 35)
  def _reduce_5(val, _values, result)
     result = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 36)
  def _reduce_6(val, _values, result)
     result = Nodes.new([])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 37)
  def _reduce_7(val, _values, result)
     result = Nodes.new([val[1]])
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 50)
  def _reduce_17(val, _values, result)
     result = val[1]
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'grammar.y.rb', 59)
  def _reduce_20(val, _values, result)
     result = NumberNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 60)
  def _reduce_21(val, _values, result)
     result = StringNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 61)
  def _reduce_22(val, _values, result)
     result = TrueNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 62)
  def _reduce_23(val, _values, result)
     result = FalseNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 63)
  def _reduce_24(val, _values, result)
     result = NilNode.new
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 67)
  def _reduce_25(val, _values, result)
     result = CallNode.new(nil, val[0], val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 69)
  def _reduce_26(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 70)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], [])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 74)
  def _reduce_28(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 75)
  def _reduce_29(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 76)
  def _reduce_30(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 80)
  def _reduce_31(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 81)
  def _reduce_32(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 85)
  def _reduce_33(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 86)
  def _reduce_34(val, _values, result)
     result = val
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 87)
  def _reduce_35(val, _values, result)
     result = val[0] << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 91)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 92)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 93)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 94)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 95)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 96)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 97)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 98)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 99)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 100)
  def _reduce_45(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 101)
  def _reduce_46(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 102)
  def _reduce_47(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 106)
  def _reduce_48(val, _values, result)
     result = GetConstantNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 110)
  def _reduce_49(val, _values, result)
     result = SetConstantNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 114)
  def _reduce_50(val, _values, result)
     result = GetLocalNode.new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 118)
  def _reduce_51(val, _values, result)
     result = SetLocalNode.new(val[0], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 122)
  def _reduce_52(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 123)
  def _reduce_53(val, _values, result)
     result = val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 124)
  def _reduce_54(val, _values, result)
     result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 128)
  def _reduce_55(val, _values, result)
     result = DefNode.new(val[1], [], val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 130)
  def _reduce_56(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5])
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y.rb', 134)
  def _reduce_57(val, _values, result)
     result = ClassNode.new(val[1], val[2])
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
